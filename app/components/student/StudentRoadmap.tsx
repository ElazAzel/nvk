"use client";

import { useThemeStyles } from '@/app/hooks/useThemeStyles';
import { RoadmapStage } from '@/app/types/roadmap';

export function StudentRoadmap() {
  const { getColorClass, getVariantClass } = useThemeStyles();

  const roadmapStages: RoadmapStage[] = [
    {
      id: 1,
      title: '–ù–∞—á–∞–ª–æ –ø—É—Ç–∏',
      description: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∫–∞—Ä—å–µ—Ä–Ω—ã–µ —Ü–µ–ª–∏',
      tasks: [
        { id: 1, title: '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å', completed: true },
        { id: 2, title: '–ü—Ä–æ–π—Ç–∏ –∫–∞—Ä—å–µ—Ä–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', completed: true },
        { id: 3, title: '–í—ã–±—Ä–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–≤–∏—Ç–∏—è', completed: false }
      ],
      isCompleted: false,
      icon: 'üéØ'
    },
    {
      id: 2,
      title: '–†–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤',
      description: '–ü—Ä–æ–π–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫—É—Ä—Å—ã –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–∞–∑–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏',
      tasks: [
        { id: 4, title: '–ü—Ä–æ–π—Ç–∏ –∫—É—Ä—Å –ø–æ –æ—Å–Ω–æ–≤–∞–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏', completed: false },
        { id: 5, title: '–í—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è', completed: false },
        { id: 6, title: '–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', completed: false }
      ],
      isCompleted: false,
      icon: 'üìö'
    },
    // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —ç—Ç–∞–ø—ã
  ];

  return (
    <div className="space-y-8">
      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
      <div className={`${getVariantClass('card', 'primary')} p-6 rounded-lg`}>
        <h2 className={`text-xl font-semibold mb-4 ${getColorClass('text.primary')}`}>
          –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å
        </h2>
        <div className="w-full bg-gray-200 rounded-full h-2">
          <div
            className="bg-blue-600 h-2 rounded-full"
            style={{ width: '45%' }}
          />
        </div>
        <p className={`mt-2 text-sm ${getColorClass('text.secondary')}`}>
          45% –ø—É—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–æ
        </p>
      </div>

      {/* –≠—Ç–∞–ø—ã —Ä–∞–∑–≤–∏—Ç–∏—è */}
      <div className="relative">
        {roadmapStages.map((stage, index) => (
          <div key={stage.id} className="mb-8 relative">
            {/* –õ–∏–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è */}
            {index < roadmapStages.length - 1 && (
              <div className="absolute left-6 top-12 bottom-0 w-0.5 bg-gray-200 dark:bg-gray-700" />
            )}
            
            <div className="flex gap-6">
              {/* –ò–∫–æ–Ω–∫–∞ —ç—Ç–∞–ø–∞ */}
              <div
                className={`w-12 h-12 flex items-center justify-center rounded-full text-2xl
                  ${stage.isCompleted ? 'bg-green-100' : 'bg-blue-100'}`}
              >
                {stage.icon}
              </div>

              {/* –ö–æ–Ω—Ç–µ–Ω—Ç —ç—Ç–∞–ø–∞ */}
              <div className={`flex-1 ${getVariantClass('card', 'primary')} p-6 rounded-lg`}>
                <h3 className={`text-lg font-medium mb-2 ${getColorClass('text.primary')}`}>
                  {stage.title}
                </h3>
                <p className={`text-sm mb-4 ${getColorClass('text.secondary')}`}>
                  {stage.description}
                </p>

                {/* –ó–∞–¥–∞—á–∏ —ç—Ç–∞–ø–∞ */}
                <div className="space-y-2">
                  {stage.tasks.map((task) => (
                    <div
                      key={task.id}
                      className="flex items-center gap-2 text-sm"
                    >
                      <input
                        type="checkbox"
                        checked={task.completed}
                        readOnly
                        className="rounded text-blue-600"
                      />
                      <span className={task.completed ? 'line-through' : ''}>
                        {task.title}
                      </span>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
} 